{
  "/api/super-admin/admin": {
    "get": {
      "tags": ["Super Admin"],
      "summary": "List admins",
      "description": "List admin users with \"Admin\" role.",
      "parameters": [
        {
          "name": "limit",
          "in": "query",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/LimitOptionSchema"
          }
        },
        {
          "name": "skip",
          "in": "query",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/SkipOptionSchema"
          }
        },
        {
          "name": "order",
          "in": "query",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/SortOrderSchema"
          }
        },
        {
          "name": "search",
          "in": "query",
          "required": false,
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Fetched list of admins",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the request was successful."
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ProfileSchema"
                    }
                  },
                  "message": {
                    "type": "string",
                    "example": "Fetched Admin Users"
                  }
                }
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/UnauthenticatedUser"
        },
        "403": {
          "$ref": "#/components/responses/UnauthorizedSuperAdminUser"
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError"
        }
      }
    },
    "post": {
      "tags": ["Super Admin"],
      "summary": "Create Admins",
      "description": "Create new admin user.",
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AdminCreationSchema"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Created new admin",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the request was successful."
                  },
                  "data": {
                    "$ref": "#/components/schemas/ProfileSchema"
                  },
                  "message": {
                    "type": "string",
                    "example": "Created Admin User"
                  }
                }
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/UnauthenticatedUser"
        },
        "403": {
          "$ref": "#/components/responses/UnauthorizedSuperAdminUser"
        },
        "409": {
          "description": "Email already in use.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates the request failed."
                  },
                  "message": {
                    "type": "string",
                    "example": "Email already in use"
                  }
                }
              }
            }
          }
        },
        "422": {
          "description": "Validation error (if request body is missing required fields, or has invalid field values).",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates the request failed."
                  },
                  "message": {
                    "type": "string",
                    "example": "Validation Error",
                    "description": "Error message."
                  },
                  "errors": {
                    "type": "object",
                    "description": "Validation error details for the fields.",
                    "properties": {
                      "name": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": ["Please enter a name"],
                        "description": "Validation errors for the name field."
                      },
                      "email": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": ["Please enter an email"],
                        "description": "Validation errors for the email field."
                      },
                      "permissions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": ["Please select at least 1 permission"],
                        "description": "Validation errors for the permissions field."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError"
        }
      }
    }
  },
  "/api/super-admin/admin/permissions": {
    "get": {
      "tags": ["Super Admin"],
      "summary": "Fetch Permissions",
      "description": "Fetch admin permission list.",
      "responses": {
        "200": {
          "description": "Fetch admin permission list.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the request was successful."
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the permission."
                        },
                        "value": {
                          "$ref": "#/components/schemas/PermissionsEnum"
                        }
                      }
                    },
                    "description": "List of admin permissions.",
                    "example": [
                      {
                        "name": "Retailer Manager",
                        "value": 0
                      },
                      {
                        "name": "Catalogue Manager",
                        "value": 1
                      },
                      {
                        "name": "Delivery Person Manager",
                        "value": 2
                      },
                      {
                        "name": "Finance Manager",
                        "value": 3
                      },
                      {
                        "name": "Data Analyst",
                        "value": 4
                      }
                    ]
                  },
                  "message": {
                    "type": "string",
                    "example": "Fetched Admin Permissions"
                  }
                }
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/UnauthenticatedUser"
        },
        "403": {
          "$ref": "#/components/responses/UnauthorizedSuperAdminUser"
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError"
        }
      }
    }
  },
  "/api/super-admin/admin/{id}": {
    "get": {
      "tags": ["Super Admin"],
      "summary": "Fetch Single Admin",
      "description": "Fetch admin by id.",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the admin user",
            "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Fetched admin.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the request was successful."
                  },
                  "data": {
                    "$ref": "#/components/schemas/ProfileSchema"
                  },
                  "message": {
                    "type": "string",
                    "example": "Fetched Admin User"
                  }
                }
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/UnauthenticatedUser"
        },
        "403": {
          "$ref": "#/components/responses/UnauthorizedSuperAdminUser"
        },
        "404": {
          "description": "Admin user not found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates the request failed."
                  },
                  "message": {
                    "type": "string",
                    "example": "Admin user not found",
                    "description": "Error message: Couldn't find the admin user."
                  }
                }
              }
            }
          }
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError"
        }
      }
    },
    "patch": {
      "tags": ["Super Admin"],
      "summary": "Update Admin Details",
      "description": "Update admin details.",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the admin user",
            "schema": {
            "type": "string"
          }
        }
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AdminUpdateSchema"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Updated admin.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the request was successful."
                  },
                  "data": {
                    "$ref": "#/components/schemas/ProfileSchema"
                  },
                  "message": {
                    "type": "string",
                    "example": "Updated Admin User"
                  }
                }
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/UnauthenticatedUser"
        },
        "403": {
          "$ref": "#/components/responses/UnauthorizedSuperAdminUser"
        },
        "404": {
          "description": "Admin user not found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates the request failed."
                  },
                  "message": {
                    "type": "string",
                    "example": "Admin user not found",
                    "description": "Error message: Couldn't find the admin user"
                  }
                }
              }
            }
          }
        },
        "409": {
          "description": "Email already in use.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates the request failed."
                  },
                  "message": {
                    "type": "string",
                    "example": "Email already in use"
                  }
                }
              }
            }
          }
        },
        "422": {
          "description": "Validation error (if request body has invalid field values).",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates the request failed."
                  },
                  "message": {
                    "type": "string",
                    "example": "Validation Error",
                    "description": "Error message."
                  },
                  "errors": {
                    "type": "object",
                    "description": "Validation error details for the fields.",
                    "properties": {
                      "name": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": ["Please enter a name"],
                        "description": "Validation errors for the name field."
                      },
                      "email": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": ["Please enter an email"],
                        "description": "Validation errors for the email field."
                      },
                      "permissions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": ["Please select at least 1 permission"],
                        "description": "Validation errors for the permissions field."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError"
        }
      }
    },
    "delete": {
      "tags": ["Super Admin"],
      "summary": "Delete Admin",
      "description": "Delete admin by id.",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the admin user",
            "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Deleted admin successfully.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the request was successful."
                  },
                  "message": {
                    "type": "string",
                    "example": "Deleted Admin User"
                  }
                }
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/UnauthenticatedUser"
        },
        "403": {
          "$ref": "#/components/responses/UnauthorizedSuperAdminUser"
        },
        "404": {
          "description": "Admin user not found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates the request failed."
                  },
                  "message": {
                    "type": "string",
                    "example": "Admin user not found",
                    "description": "Error message: Couldn't find the admin user"
                  }
                }
              }
            }
          }
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError"
        }
      }
    }
  }
}
