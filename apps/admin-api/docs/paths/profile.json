{
  "/api/profile": {
    "get": {
      "tags": ["Profile"],
      "summary": "Profile Details",
      "description": "Get details of the logged in user.",
      "responses": {
        "200": {
          "description": "Retrieved the user details successfully.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the request was successful."
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique user ID."
                      },
                      "email": {
                        "type": "string",
                        "description": "User's email address."
                      },
                      "name": {
                        "type": "string",
                        "description": "User's full name."
                      },
                      "role": {
                        "type": "string",
                        "description": "User's role (e.g., \"SUPER_ADMIN\", \"ADMIN\")."
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp when the user was created. Follows ISO 8601 format."
                      }
                    }
                  },
                  "message": {
                    "type": "string",
                    "example": "Fetched User Details"
                  }
                }
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/UnauthenticatedUser"
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError"
        }
      }
    },
    "patch": {
      "tags": ["Profile"],
      "summary": "Profile Update",
      "description": "Update profile details of logged in user.",
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProfileUpdateSchema"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Updated the user details successfully.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the request was successful."
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique user ID."
                      },
                      "email": {
                        "type": "string",
                        "description": "User's email address."
                      },
                      "name": {
                        "type": "string",
                        "description": "User's full name."
                      },
                      "role": {
                        "type": "string",
                        "description": "User's role (e.g., \"SUPER_ADMIN\", \"ADMIN\")."
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp when the user was created. Follows ISO 8601 format."
                      }
                    }
                  },
                  "message": {
                    "type": "string",
                    "example": "Fetched User Details"
                  }
                }
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/UnauthenticatedUser"
        },
        "404": {
          "description": "User not found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates the request failed."
                  },
                  "message": {
                    "type": "string",
                    "example": "User not found"
                  }
                }
              }
            }
          }
        },
        "409": {
          "description": "Email already in use.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates the request failed."
                  },
                  "message": {
                    "type": "string",
                    "example": "Email already in use"
                  }
                }
              }
            }
          }
        },
        "422": {
          "description": "Validation error (if request body is missing required fields).",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates the request failed."
                  },
                  "message": {
                    "type": "string",
                    "example": "Validation Error",
                    "description": "Error message."
                  },
                  "errors": {
                    "type": "object",
                    "description": "Validation error details for the fields.",
                    "properties": {
                      "email": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": ["Please enter an email"],
                        "description": "Validation errors for the email field."
                      },
                      "name": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": ["Please enter a name"],
                        "description": "Validation errors for the name field."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError"
        }
      }
    }
  },
  "/api/profile/password": {
    "put": {
      "tags": ["Profile"],
      "summary": "Password Update",
      "description": "Update password of logged in user.",
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PasswordUpdateSchema"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Updated the user details successfully.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the request was successful."
                  },
                  "data": {
                    "type": "null"
                  },
                  "message": {
                    "type": "string",
                    "example": "Updated Password"
                  }
                }
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/IncorrectPassword"
        },
        "404": {
          "description": "User not found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates the request failed."
                  },
                  "message": {
                    "type": "string",
                    "example": "User not found"
                  }
                }
              }
            }
          }
        },
        "422": {
          "description": "Validation error (if request body is missing required fields).",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates the request failed."
                  },
                  "message": {
                    "type": "string",
                    "example": "Validation Error",
                    "description": "Error message."
                  },
                  "errors": {
                    "type": "object",
                    "description": "Validation error details for the fields.",
                    "properties": {
                      "password": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": ["Please enter a password"],
                        "description": "Validation errors for the password field."
                      },
                      "newPassword": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": ["Please enter a password"],
                        "description": "Validation errors for the new password field."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError"
        }
      }
    }
  }
}
