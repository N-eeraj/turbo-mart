{
  "/api/profile": {
    "get": {
      "tags": ["Profile"],
      "summary": "Profile Details",
      "description": "Get details of the logged in user.",
      "responses": {
        "200": {
          "description": "Retrieved the user details successfully.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the request was successful."
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique user ID."
                      },
                      "email": {
                        "type": "string",
                        "description": "User's email address."
                      },
                      "name": {
                        "type": "string",
                        "description": "User's full name."
                      },
                      "role": {
                        "type": "number",
                        "description": "User role enum, not applicable for the super admin."
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp when the user was created. Follows ISO 8601 format."
                      }
                    },
                    "profilePicture": {
                      "type": "string",
                      "description": "The URL to the user's profile picture if set."
                    }
                  },
                  "message": {
                    "type": "string",
                    "example": "Fetched User Details"
                  }
                }
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/UnauthenticatedUser"
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError"
        }
      }
    },
    "patch": {
      "tags": ["Profile"],
      "summary": "Profile Update",
      "description": "Update profile details of logged in user.",
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProfileUpdateSchema"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Updated the user details successfully.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the request was successful."
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique user ID."
                      },
                      "email": {
                        "type": "string",
                        "description": "User's email address."
                      },
                      "name": {
                        "type": "string",
                        "description": "User's full name."
                      },
                      "role": {
                        "type": "number",
                        "description": "User role enum, not applicable for the super admin."
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp when the user was created. Follows ISO 8601 format."
                      }
                    },
                    "profilePicture": {
                      "type": "string",
                      "description": "The URL to the user's profile picture if set."
                    }
                  },
                  "message": {
                    "type": "string",
                    "example": "Fetched User Details"
                  }
                }
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/UnauthenticatedUser"
        },
        "404": {
          "$ref": "#/components/responses/UserNotFound"
        },
        "409": {
          "description": "Email already in use.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates the request failed."
                  },
                  "message": {
                    "type": "string",
                    "example": "Email already in use"
                  }
                }
              }
            }
          }
        },
        "422": {
          "description": "Validation error (if request body is missing required fields).",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates the request failed."
                  },
                  "message": {
                    "type": "string",
                    "example": "Validation Error",
                    "description": "Error message."
                  },
                  "errors": {
                    "type": "object",
                    "description": "Validation error details for the fields.",
                    "properties": {
                      "email": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": ["Please enter an email"],
                        "description": "Validation errors for the email field."
                      },
                      "name": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": ["Please enter a name"],
                        "description": "Validation errors for the name field."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError"
        }
      }
    }
  },
  "/api/profile/password": {
    "put": {
      "tags": ["Profile"],
      "summary": "Password Update",
      "description": "Update password of logged in user.",
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PasswordUpdateSchema"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Updated the password successfully.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the request was successful."
                  },
                  "data": {
                    "type": "null"
                  },
                  "message": {
                    "type": "string",
                    "example": "Updated Password"
                  }
                }
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/IncorrectPassword"
        },
        "404": {
          "$ref": "#/components/responses/UserNotFound"
        },
        "422": {
          "description": "Validation error (if request body is missing required fields).",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates the request failed."
                  },
                  "message": {
                    "type": "string",
                    "example": "Validation Error",
                    "description": "Error message."
                  },
                  "errors": {
                    "type": "object",
                    "description": "Validation error details for the fields.",
                    "properties": {
                      "password": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": ["Please enter a password"],
                        "description": "Validation errors for the password field."
                      },
                      "newPassword": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": ["Please enter a password"],
                        "description": "Validation errors for the new password field."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError"
        }
      }
    }
  },
  "/api/profile/picture": {
    "put": {
      "tags": ["Profile"],
      "summary": "Profile Picture Update",
      "description": "Update profile picture of logged in user.",
      "requestBody": {
        "required": true,
        "content": {
          "multipart/form-data": {
            "schema": {
              "$ref": "#/components/schemas/ProfilePictureSchema"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Updated the profile picture successfully.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the request was successful."
                  },
                  "data": {
                    "type": "null"
                  },
                  "message": {
                    "type": "string",
                    "example": "Updated Profile Picture"
                  }
                }
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/UnauthenticatedUser"
        },
        "404": {
          "$ref": "#/components/responses/UserNotFound"
        },
        "422": {
          "description": "Validation error (if request body is missing required fields).",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates the request failed."
                  },
                  "message": {
                    "type": "string",
                    "example": "Validation Error",
                    "description": "Error message."
                  },
                  "errors": {
                    "type": "object",
                    "description": "Validation error details for the fields.",
                    "properties": {
                      "profilePicture": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": ["Please upload a picture"],
                        "description": "Validation errors for the profile picture field."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError"
        }
      }
    },
    "delete": {
      "tags": ["Profile"],
      "summary": "Profile Picture Removal",
      "description": "Remove profile picture of logged in user.",
      "responses": {
        "200": {
          "description": "Removed the profile picture successfully.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the request was successful."
                  },
                  "data": {
                    "type": "null"
                  },
                  "message": {
                    "type": "string",
                    "example": "Removed Profile Picture"
                  }
                }
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/UnauthenticatedUser"
        },
        "404": {
          "$ref": "#/components/responses/UserNotFound"
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError"
        }
      }
    }
  },
  "/api/profile/notifications": {
    "get": {
      "tags": ["Profile"],
      "summary": "Profile Notifications",
      "description": "List of the notifications of logged in user.",
      "parameters": [
        {
          "name": "isRead",
          "in": "query",
          "required": false,
          "schema": {
            "type": "boolean",
            "description": "Read status flag of the user notifications to be retrieved."
          }
        },
        {
          "name": "limit",
          "in": "query",
          "required": false,
          "schema": {
            "type": "number",
            "description": "Number of notifications to be retrieved.",
            "default": 10
          }
        },
        {
          "name": "skip",
          "in": "query",
          "required": false,
          "schema": {
            "type": "number",
            "description": "Number of notifications to be skipped.",
            "default": 0
          }
        },
        {
          "name": "order",
          "in": "query",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/SortOrderEnum"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Fetched the user notifications successfully.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the request was successful."
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique notification ID."
                        },
                        "type": {
                          "type": "number",
                          "description": "Enum of notification type."
                        },
                        "title": {
                          "type": "string",
                          "description": "Title of the notification."
                        },
                        "message": {
                          "type": "string",
                          "description": "Message of the notification."
                        },
                        "data": {
                          "type": "object",
                          "description": "An optional data part of the notification."
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Timestamp when the notification was created. Follows ISO 8601 format."
                        }
                      }
                    }
                  },
                  "message": {
                    "type": "string",
                    "example": "Fetched User Notifications"
                  }
                }
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/UnauthenticatedUser"
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError"
        }
      }
    },
    "patch":  {
      "tags": ["Profile"],
      "summary": "Bulk Update Notifications Read Status",
      "description": "Update the read status of a list of notifications.",
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/NotificationReadStatusBulkSchema"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Updated the notifications read status successfully.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the request was successful."
                  },
                  "data": {
                    "type": "null"
                  },
                  "message": {
                    "oneOf": [
                      {
                        "type": "string",
                        "example": "Marked Notifications as read",
                        "description": "Success message: Marked Notifications as read (when read is true)."
                      },
                      {
                        "type": "string",
                        "example": "Marked Notifications as unread",
                        "description": "Success message: Marked Notifications as unread (when read is false)."
                      }
                    ]
                  }
                }
              },
              "examples": {
                "NotificationsRead": {
                  "summary": "Marked Notifications Read",
                  "value": {
                    "success": true,
                    "data": null,
                    "message": "Marked Notifications as read"
                  }
                },
                "NotificationsUnread": {
                  "summary": "Marked Notifications Unread",
                  "value": {
                    "success": true,
                    "data": null,
                    "message": "Marked Notifications as unread"
                  }
                }
              }
            }
          }
        },
        "400": {
          "$ref": "#/components/responses/InvalidNotificationIds"
        },
        "401": {
          "$ref": "#/components/responses/UnauthenticatedUser"
        },
        "404": {
          "$ref": "#/components/responses/NotificationStatusNotFound"
        },
        "422": {
          "description": "Validation error (if request body is missing required fields).",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates the request failed."
                  },
                  "message": {
                    "type": "string",
                    "example": "Validation Error",
                    "description": "Error message."
                  },
                  "errors": {
                    "type": "object",
                    "description": "Validation error details for the fields.",
                    "properties": {
                      "read": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": ["Invalid read value"],
                        "description": "Validation errors for the read field."
                      },
                      "notifications": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": ["Please select at least 1 notification"],
                        "description": "Validation errors for the notifications field."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError"
        }
      }
    },
    "delete": {
      "tags": ["Profile"],
      "summary": "Bulk Delete Notifications",
      "description": "Delete the list of notifications.",
      "parameters": [
        {
          "name": "ids",
          "in": "query",
          "description": "IDs of the notification",
          "schema": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Delete the notification successfully.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the request was successful."
                  },
                  "data": {
                    "type": "null"
                  },
                  "message": {
                    "type": "string",
                    "example": "Deleted Notifications",
                    "description": "Success message: Deleted Notification."
                  }
                }
              }
            }
          }
        },
        "400": {
          "$ref": "#/components/responses/InvalidNotificationIds"
        },
        "401": {
          "$ref": "#/components/responses/UnauthenticatedUser"
        },
        "404": {
          "$ref": "#/components/responses/NotificationStatusNotFound"
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError"
        }
      }
    }
  },
  "/api/profile/notifications/{id}": {
    "get": {
      "tags": ["Profile"],
      "summary": "Profile Notification",
      "description": "Notifications of logged in user by id.",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the notification",
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Fetched the notification successfully.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the request was successful."
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique notification ID."
                      },
                      "type": {
                        "type": "number",
                        "description": "Enum of notification type."
                      },
                      "title": {
                        "type": "string",
                        "description": "Title of the notification."
                      },
                      "message": {
                        "type": "string",
                        "description": "Message of the notification."
                      },
                      "data": {
                        "type": "object",
                        "description": "An optional data part of the notification."
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp when the notification was created. Follows ISO 8601 format."
                      }
                    }
                  },
                  "message": {
                    "type": "string",
                    "example": "Fetched Notification"
                  }
                }
              }
            }
          }
        },
        "400": {
          "$ref": "#/components/responses/InvalidNotificationIds"
        },
        "401": {
          "$ref": "#/components/responses/UnauthenticatedUser"
        },
        "404": {
          "$ref": "#/components/responses/NotificationStatusNotFound"
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError"
        }
      }
    },
    "patch": {
      "tags": ["Profile"],
      "summary": "Update Notification Read Status",
      "description": "Update the read status of a notification.",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the notification",
          "schema": {
            "type": "string"
          }
        }
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/NotificationReadStatusSchema"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Updated the notification read status successfully.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the request was successful."
                  },
                  "data": {
                    "type": "null"
                  },
                  "message": {
                    "oneOf": [
                      {
                        "type": "string",
                        "example": "Marked Notification as read",
                        "description": "Success message: Marked Notification as read (when read is true)."
                      },
                      {
                        "type": "string",
                        "example": "Marked Notification as unread",
                        "description": "Success message: Marked Notification as unread (when read is false)."
                      }
                    ]
                  }
                }
              },
              "examples": {
                "NotificationRead": {
                  "summary": "Marked Notification Read",
                  "value": {
                    "success": true,
                    "data": null,
                    "message": "Marked Notification as read"
                  }
                },
                "NotificationUnread": {
                  "summary": "Marked Notification Unread",
                  "value": {
                    "success": true,
                    "data": null,
                    "message": "Marked Notification as unread"
                  }
                }
              }
            }
          }
        },
        "400": {
          "$ref": "#/components/responses/InvalidNotificationIds"
        },
        "401": {
          "$ref": "#/components/responses/UnauthenticatedUser"
        },
        "404": {
          "$ref": "#/components/responses/NotificationStatusNotFound"
        },
        "422": {
          "description": "Validation error (if request body is missing required fields).",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates the request failed."
                  },
                  "message": {
                    "type": "string",
                    "example": "Validation Error",
                    "description": "Error message."
                  },
                  "errors": {
                    "type": "object",
                    "description": "Validation error details for the fields.",
                    "properties": {
                      "read": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": ["Invalid read value"],
                        "description": "Validation errors for the read field."
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError"
        }
      }
    },
    "delete": {
      "tags": ["Profile"],
      "summary": "Delete Notification",
      "description": "Delete the notification.",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of the notification",
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Delete the notification successfully.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the request was successful."
                  },
                  "data": {
                    "type": "null"
                  },
                  "message": {
                    "type": "string",
                    "example": "Deleted Notification",
                    "description": "Success message: Deleted Notification."
                  }
                }
              }
            }
          }
        },
        "400": {
          "$ref": "#/components/responses/InvalidNotificationIds"
        },
        "401": {
          "$ref": "#/components/responses/UnauthenticatedUser"
        },
        "404": {
          "$ref": "#/components/responses/NotificationStatusNotFound"
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError"
        }
      }
    }
  }
}
