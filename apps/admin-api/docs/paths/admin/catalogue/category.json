{
  "/api/admin/catalogue/category": {
    "get": {
      "tags": ["Category Management"],
      "summary": "Category List",
      "description": "Fetches the list of categories.",
      "parameters": [
        {
          "name": "limit",
          "in": "query",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/LimitOptionSchema"
          }
        },
        {
          "name": "skip",
          "in": "query",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/SkipOptionSchema"
          }
        },
        {
          "name": "order",
          "in": "query",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/SortOrderSchema"
          }
        },
        {
          "name": "search",
          "in": "query",
          "required": false,
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Fetched list of categories",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the request was successful."
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CategorySchema"
                    }
                  },
                  "message": {
                    "type": "string",
                    "example": "Fetched Categories"
                  }
                }
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/UnauthenticatedUser"
        },
        "403": {
          "$ref": "#/components/responses/UnauthorizedUser"
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError"
        }
      }
    },
    "post": {
      "tags": ["Category Management"],
      "summary": "Create Category",
      "description": "Create new category.",
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CategoryCreationSchema"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Create category.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the request was successful."
                  },
                  "data": {
                    "$ref": "#/components/schemas/CategorySchema"
                  },
                  "message": {
                    "type": "string",
                    "example": "Created Category"
                  }
                }
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/UnauthenticatedUser"
        },
        "403": {
          "$ref": "#/components/responses/UnauthorizedUser"
        },
        "409": {
          "description": "Conflict error.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates the request failed."
                  },
                  "message": {
                    "type": "string",
                    "example": "A category with the same unique field(s) already exists"
                  },
                  "errors": {
                    "type": "object",
                    "properties": {
                      "slug": {
                        "type": "string",
                        "example": "slug already in use"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError"
        }
      }
    }
  },
  "/api/admin/catalogue/category/{categoryId}": {
    "get": {
      "tags": ["Category Management"],
      "summary": "Fetch single Category",
      "description": "Fetch single category.",
      "parameters": [
        {
          "name": "categoryId",
          "in": "path",
          "required": true,
          "description": "ID of the category.",
            "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Fetched category.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the request was successful."
                  },
                  "data": {
                    "$ref": "#/components/schemas/CategorySchema"
                  },
                  "message": {
                    "type": "string",
                    "example": "Fetched Category"
                  }
                }
              }
            }
          }
        },
        "400": {
          "$ref": "#/components/responses/InvalidCategoryId"
        },
        "401": {
          "$ref": "#/components/responses/UnauthenticatedUser"
        },
        "403": {
          "$ref": "#/components/responses/UnauthorizedUser"
        },
        "404": {
          "description": "Category not found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates the request failed."
                  },
                  "message": {
                    "type": "string",
                    "example": "Category not found",
                    "description": "Error message: Couldn't find the category."
                  }
                }
              }
            }
          }
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError"
        }
      }
    },
    "patch": {
      "tags": ["Category Management"],
      "summary": "Update Category",
      "description": "Update category.",
      "parameters": [
        {
          "name": "categoryId",
          "in": "path",
          "required": true,
          "description": "ID of the category.",
            "schema": {
            "type": "string"
          }
        }
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CategoryUpdateSchema"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Update category.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the request was successful."
                  },
                  "data": {
                    "$ref": "#/components/schemas/CategorySchema"
                  },
                  "message": {
                    "type": "string",
                    "example": "Updated Category"
                  }
                }
              }
            }
          }
        },
        "400": {
          "$ref": "#/components/responses/InvalidCategoryId"
        },
        "401": {
          "$ref": "#/components/responses/UnauthenticatedUser"
        },
        "403": {
          "$ref": "#/components/responses/UnauthorizedUser"
        },
        "404": {
          "description": "Category not found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates the request failed."
                  },
                  "message": {
                    "type": "string",
                    "example": "Category not found",
                    "description": "Error message: Couldn't find the category."
                  }
                }
              }
            }
          }
        },
        "409": {
          "description": "Conflict error.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates the request failed."
                  },
                  "message": {
                    "type": "string",
                    "example": "A category with the same unique field(s) already exists"
                  },
                  "errors": {
                    "type": "object",
                    "properties": {
                      "slug": {
                        "type": "string",
                        "example": "slug already in use"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError"
        }
      }
    }
  }
}
