{
  "/api/admin/catalogue/subcategory": {
    "get": {
      "tags": ["Subcategory Management"],
      "summary": "Subcategory List",
      "description": "Fetches the list of subcategories.",
      "parameters": [
        {
          "name": "limit",
          "in": "query",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/LimitOptionSchema"
          }
        },
        {
          "name": "skip",
          "in": "query",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/SkipOptionSchema"
          }
        },
        {
          "name": "order",
          "in": "query",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/SortOrderSchema"
          }
        },
        {
          "name": "search",
          "in": "query",
          "required": false,
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Fetched list of subcategories",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the request was successful."
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SubcategorySchema"
                    }
                  },
                  "message": {
                    "type": "string",
                    "example": "Fetched Subcategories"
                  }
                }
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/UnauthenticatedUser"
        },
        "403": {
          "$ref": "#/components/responses/UnauthorizedUser"
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError"
        }
      }
    },
    "post": {
      "tags": ["Subcategory Management"],
      "summary": "Create Subcategory",
      "description": "Create new subcategory.",
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SubcategoryCreationSchema"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Create subcategory.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the request was successful."
                  },
                  "data": {
                    "$ref": "#/components/schemas/SubcategorySchema"
                  },
                  "message": {
                    "type": "string",
                    "example": "Created Subcategory"
                  }
                }
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/UnauthenticatedUser"
        },
        "403": {
          "$ref": "#/components/responses/UnauthorizedUser"
        },
        "409": {
          "description": "Conflict error.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates the request failed."
                  },
                  "message": {
                    "type": "string",
                    "example": "A subcategory with the same unique field(s) already exists"
                  },
                  "errors": {
                    "type": "object",
                    "properties": {
                      "slug": {
                        "type": "string",
                        "example": "slug already in use"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError"
        }
      }
    }
  },
  "/api/admin/catalogue/subcategory/{subcategoryId}": {
    "get": {
      "tags": ["Subcategory Management"],
      "summary": "Fetch Single Subcategory",
      "description": "Fetch single subcategory.",
      "parameters": [
        {
          "name": "subcategoryId",
          "in": "path",
          "required": true,
          "description": "ID of the subcategory.",
            "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Fetched subcategory.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the request was successful."
                  },
                  "data": {
                    "$ref": "#/components/schemas/SubcategorySchema"
                  },
                  "message": {
                    "type": "string",
                    "example": "Fetched Subcategory"
                  }
                }
              }
            }
          }
        },
        "400": {
          "$ref": "#/components/responses/InvalidSubcategoryId"
        },
        "401": {
          "$ref": "#/components/responses/UnauthenticatedUser"
        },
        "403": {
          "$ref": "#/components/responses/UnauthorizedUser"
        },
        "404": {
          "description": "Subcategory not found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates the request failed."
                  },
                  "message": {
                    "type": "string",
                    "example": "Subcategory not found",
                    "description": "Error message: Couldn't find the subcategory."
                  }
                }
              }
            }
          }
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError"
        }
      }
    },
    "patch": {
      "tags": ["Subcategory Management"],
      "summary": "Update Subcategory",
      "description": "Update subcategory.",
      "parameters": [
        {
          "name": "subcategoryId",
          "in": "path",
          "required": true,
          "description": "ID of the subcategory.",
            "schema": {
            "type": "string"
          }
        }
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SubcategoryUpdateSchema"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Update subcategory.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the request was successful."
                  },
                  "data": {
                    "$ref": "#/components/schemas/SubcategorySchema"
                  },
                  "message": {
                    "type": "string",
                    "example": "Updated Subcategory"
                  }
                }
              }
            }
          }
        },
        "400": {
          "$ref": "#/components/responses/InvalidSubcategoryId"
        },
        "401": {
          "$ref": "#/components/responses/UnauthenticatedUser"
        },
        "403": {
          "$ref": "#/components/responses/UnauthorizedUser"
        },
        "404": {
          "description": "Subcategory not found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates the request failed."
                  },
                  "message": {
                    "type": "string",
                    "example": "Subcategory not found",
                    "description": "Error message: Couldn't find the subcategory."
                  }
                }
              }
            }
          }
        },
        "409": {
          "description": "Conflict error.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates the request failed."
                  },
                  "message": {
                    "type": "string",
                    "example": "A subcategory with the same unique field(s) already exists"
                  },
                  "errors": {
                    "type": "object",
                    "properties": {
                      "slug": {
                        "type": "string",
                        "example": "slug already in use"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError"
        }
      }
    },
    "delete": {
      "tags": ["Subcategory Management"],
      "summary": "Delete Subcategory",
      "description": "Delete subcategory.",
      "parameters": [
        {
          "name": "subcategoryId",
          "in": "path",
          "required": true,
          "description": "ID of the subcategory.",
            "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Delete subcategory.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the request was successful."
                  },
                  "message": {
                    "type": "string",
                    "example": "Deleted Subcategory"
                  }
                }
              }
            }
          }
        },
        "400": {
          "$ref": "#/components/responses/InvalidSubcategoryId"
        },
        "401": {
          "$ref": "#/components/responses/UnauthenticatedUser"
        },
        "403": {
          "$ref": "#/components/responses/UnauthorizedUser"
        },
        "404": {
          "description": "Subcategory not found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates the request failed."
                  },
                  "message": {
                    "type": "string",
                    "example": "Subcategory not found",
                    "description": "Error message: Couldn't find the subcategory."
                  }
                }
              }
            }
          }
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError"
        }
      }
    }
  }
}
