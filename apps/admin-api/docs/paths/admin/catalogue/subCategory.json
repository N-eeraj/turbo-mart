{
  "/api/admin/catalogue/sub-category": {
    "get": {
      "tags": ["Sub Category Management"],
      "summary": "Sub Category List",
      "description": "Fetches the list of sub categories.",
      "parameters": [
        {
          "name": "limit",
          "in": "query",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/LimitOptionSchema"
          }
        },
        {
          "name": "skip",
          "in": "query",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/SkipOptionSchema"
          }
        },
        {
          "name": "order",
          "in": "query",
          "required": false,
          "schema": {
            "$ref": "#/components/schemas/SortOrderSchema"
          }
        },
        {
          "name": "search",
          "in": "query",
          "required": false,
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Fetched list of sub categories",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the request was successful."
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SubCategorySchema"
                    }
                  },
                  "message": {
                    "type": "string",
                    "example": "Fetched Sub Categories"
                  }
                }
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/UnauthenticatedUser"
        },
        "403": {
          "$ref": "#/components/responses/UnauthorizedUser"
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError"
        }
      }
    },
    "post": {
      "tags": ["Sub Category Management"],
      "summary": "Create Sub Category",
      "description": "Create new sub category.",
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SubCategoryCreationSchema"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Create sub category.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the request was successful."
                  },
                  "data": {
                    "$ref": "#/components/schemas/SubCategorySchema"
                  },
                  "message": {
                    "type": "string",
                    "example": "Created Sub Category"
                  }
                }
              }
            }
          }
        },
        "401": {
          "$ref": "#/components/responses/UnauthenticatedUser"
        },
        "403": {
          "$ref": "#/components/responses/UnauthorizedUser"
        },
        "409": {
          "description": "Conflict error.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates the request failed."
                  },
                  "message": {
                    "type": "string",
                    "example": "A sub category with the same unique field(s) already exists"
                  },
                  "errors": {
                    "type": "object",
                    "properties": {
                      "slug": {
                        "type": "string",
                        "example": "slug already in use"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError"
        }
      }
    }
  },
  "/api/admin/catalogue/sub-category/{subCategoryId}": {
    "get": {
      "tags": ["Sub Category Management"],
      "summary": "Fetch Single Sub Category",
      "description": "Fetch single sub category.",
      "parameters": [
        {
          "name": "subCategoryId",
          "in": "path",
          "required": true,
          "description": "ID of the sub category.",
            "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Fetched sub category.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the request was successful."
                  },
                  "data": {
                    "$ref": "#/components/schemas/SubCategorySchema"
                  },
                  "message": {
                    "type": "string",
                    "example": "Fetched Sub Category"
                  }
                }
              }
            }
          }
        },
        "400": {
          "$ref": "#/components/responses/InvalidSubCategoryId"
        },
        "401": {
          "$ref": "#/components/responses/UnauthenticatedUser"
        },
        "403": {
          "$ref": "#/components/responses/UnauthorizedUser"
        },
        "404": {
          "description": "Sub category not found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates the request failed."
                  },
                  "message": {
                    "type": "string",
                    "example": "Sub category not found",
                    "description": "Error message: Couldn't find the sub category."
                  }
                }
              }
            }
          }
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError"
        }
      }
    },
    "patch": {
      "tags": ["Sub Category Management"],
      "summary": "Update Sub Category",
      "description": "Update sub category.",
      "parameters": [
        {
          "name": "subCategoryId",
          "in": "path",
          "required": true,
          "description": "ID of the sub category.",
            "schema": {
            "type": "string"
          }
        }
      ],
      "requestBody": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SubCategoryUpdateSchema"
            }
          }
        }
      },
      "responses": {
        "200": {
          "description": "Update sub category.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the request was successful."
                  },
                  "data": {
                    "$ref": "#/components/schemas/SubCategorySchema"
                  },
                  "message": {
                    "type": "string",
                    "example": "Updated Sub Category"
                  }
                }
              }
            }
          }
        },
        "400": {
          "$ref": "#/components/responses/InvalidSubCategoryId"
        },
        "401": {
          "$ref": "#/components/responses/UnauthenticatedUser"
        },
        "403": {
          "$ref": "#/components/responses/UnauthorizedUser"
        },
        "404": {
          "description": "Sub category not found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates the request failed."
                  },
                  "message": {
                    "type": "string",
                    "example": "Sub category not found",
                    "description": "Error message: Couldn't find the sub category."
                  }
                }
              }
            }
          }
        },
        "409": {
          "description": "Conflict error.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates the request failed."
                  },
                  "message": {
                    "type": "string",
                    "example": "A sub category with the same unique field(s) already exists"
                  },
                  "errors": {
                    "type": "object",
                    "properties": {
                      "slug": {
                        "type": "string",
                        "example": "slug already in use"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError"
        }
      }
    },
    "delete": {
      "tags": ["Sub Category Management"],
      "summary": "Delete Sub Category",
      "description": "Delete sub category.",
      "parameters": [
        {
          "name": "subCategoryId",
          "in": "path",
          "required": true,
          "description": "ID of the sub category.",
            "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Delete sub category.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "description": "Boolean indicating whether the request was successful."
                  },
                  "message": {
                    "type": "string",
                    "example": "Deleted Sub Category"
                  }
                }
              }
            }
          }
        },
        "400": {
          "$ref": "#/components/responses/InvalidSubCategoryId"
        },
        "401": {
          "$ref": "#/components/responses/UnauthenticatedUser"
        },
        "403": {
          "$ref": "#/components/responses/UnauthorizedUser"
        },
        "404": {
          "description": "Sub category not found.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "success": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates the request failed."
                  },
                  "message": {
                    "type": "string",
                    "example": "Sub category not found",
                    "description": "Error message: Couldn't find the sub category."
                  }
                }
              }
            }
          }
        },
        "500": {
          "$ref": "#/components/responses/InternalServerError"
        }
      }
    }
  }
}
